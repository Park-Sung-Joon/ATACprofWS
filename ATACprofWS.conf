
$ROOT = "/home/park/Miyanari/ATAC/";

# TOOLs
$SAMT= "/home/park/TOOL/bin/samtools";
$BAMT= "/home/park/TOOL/bamtools/bin/bamtools";
$PICA = "/home/park/TOOL/picard/picard.jar";
$JAVA = "/usr/local/package/java/current8/bin/java";

$BTB = "/home/park/TOOL/BEDTools/bin/bamToBed";
$INTB = "/home/park/TOOL/BEDTools/bin/intersectBed";
$MERGEB = "/home/park/TOOL/BEDTools/bin/mergeBed";
$COVB = "/home/park/TOOL/BEDTools/bin/coverageBed";
$MACS2 = "/home/park/.local/bin/macs2";
$BAMCOV = "/home/park/.local/bin/bamCoverage";

# Directories
$ANNOT_DIR = "/home/park/Human/ANNOT_201811/";
$TSS_DIR = $ANNOT_DIR . "REFSEQ_TSS/";
$TES_DIR = $ANNOT_DIR . "REFSEQ_TSS/"; #same with TSS_DIR

$GE_DIR  = $ANNOT_DIR . "GENE_Feature_revisit/10K_WIN/";
$SL_WIN = "10K";

#Features
undef(%GE_BEDS);
$GE_BEDS{ "Exons" } = $GE_DIR . "hg38_refSeq_only_nm_Exons.bed";
$GE_BEDS{ "Introns" } = $GE_DIR . "hg38_refSeq_only_nm_Introns.bed";
$GE_BEDS{ "GeneBody" } = $GE_DIR . "hg38_refSeq_only_nm_Genebody.bed";
$GE_BEDS{ "Transcribed" } = $GE_DIR . "hg38_refSeq_only_nm_TranscribedRegion.bed";
$GE_BEDS{ "Transcribed_Slop"} = $GE_DIR . "hg38_refSeq_only_nm_TranscribedRegion+".$SL_WIN."Slop.bed";

$GE_BEDS{ "Promoter"} = $GE_DIR . "hg38_refSeq_only_nm_Promoter_" . $SL_WIN . "win.bed";
$GE_BEDS{ "Core_Promoter"} = $GE_DIR . "hg38_refSeq_only_nm_Promoter_500win.bed";
$GE_BEDS{ "TSS_".$SL_WIN} = $GE_DIR . "hg38_refSeq_only_nm_TSS-" . $SL_WIN . ".bed";
$GE_BEDS{ "TES_".$SL_WIN} = $GE_DIR . "hg38_refSeq_only_nm_TES+" . $SL_WIN . ".bed";
$GE_BEDS{ "Intergenic" } = $GE_DIR .  "hg38_refSeq_only_nm_Intergenic_noTranscRegion+" . $SL_WIN . "Slop.bed";
$GE_BEDS{ "Enhancer" }  = $ROOT . "Enh_BED/Enhancer.bed";

# This order
undef(@GE_BEDS_KEYS);
@GE_BEDS_KEYS = ( "Intergenic", "Enhancer", "Promoter", "TSS_".$SL_WIN, "Transcribed", "TES_".$SL_WIN, "Exons", "Introns", "Core_Promoter");

# no more used
$PROF_DIR_PPM = $ROOT . "Profiles_PPM/";
$PROF_DIR_PPM_notscale = $ROOT . "Profiles_PPM_notSF/";

### Only NC_2
$ROOT_NC_2 = $ROOT . "Only_NC2/";

# Files
$BLACK_LIST = $ROOT . "../genome/blacklist/hg38.chipseq.chrM.combined.bed";

$GL_10K = "/home/park/Human/HG38/Genome_Bed/hg38_10k.bed";
$GL_20K = "/home/park/Human/HG38/Genome_Bed/hg38_20k.bed";
$GL_50K = "/home/park/Human/HG38/Genome_Bed/hg38_50k.bed";
$REFSEQ_GENEBODY_5KUP = "/home/park/Human/ANNOT_201811/GENE_Feature/hg38_refseq_NMNR_gene.5utr_5K.bed";

# FASTA without chrM (WOM)
undef(%WOM_FA);
$WOM_FA{ "DM6" }     = $ROOT_FASTQ . "dm6_chr.genome_wochrM.fa";
$WOM_FA{ "HG38" }    = $ROOT_FASTQ . "hg38_wochrM.fa";
$WOM_FA{ "HYBRID" } = $ROOT_FASTQ . "hg38.dm6_wochrM.fa";

# FASTA without chrY and chrM (WOYM)
undef(%WOYM_FA);
#including chrY for DM6
$WOYM_FA{ "DM6" }     = $ROOT_FASTQ  . "dm6_chr.genome_wochrM.fa";

$WOYM_FA{ "HG38" }    = $ROOT_FASTQ . "hg38_wochrYM.fa";
$WOYM_FA{ "HYBRID" } = $ROOT_FASTQ . "hg38.dm6_wochrYM.fa";

# Configuration 
$BW_BIN     = 50; # bigwig bin size 
$DENOVO_CUT = 1;  # if <1 scaled read count, the value set to zero
$DENOVO_CUT_GENE = 10; # cutoff for clustering
$MIN_SCALED_READ_CUT = 10;


$PVAL_THRESH = 0.01; #for MACS2 pvalue threshold
$SMOOTH_WIN = 150;  #for MACS2 smoothing window
$SHIFT_SIZE = int( $SMOOTH_WIN / 2.0) * -1; #for MACS2 shift (-1* half_size of ext)
$MACS2_OPT = "callpeak --nomodel --shift " . $SHIFT_SIZE . " --extsize " . $SMOOTH_WIN . " -g hs -p " . $PVAL_THRESH . " -B --SPMR --keep-dup all --call-summits -f BED";
# B: pileup, local lambda
# SPMR: signal per millioin reads




1;



